# -*- coding: utf-8 -*-
"""Preprocessing_Data_in_ML.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18ZFmZAeKCUMkdzBDOamSQUeJaQTohqTa
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split

"""Importing the dataset"""

df = pd.read_csv("Data.csv")
df.head()
# Specifying features and dependent variable (Matrix of features)
x = df.iloc[:,:-1].values
y = df.iloc[:,-1].values

display(x,y)

"""Dealing with missing data"""

from sklearn.impute import SimpleImputer
imputer = SimpleImputer(missing_values = np.nan,strategy = 'mean')
imputer.fit(x[:,1:3])
x[:,1:3] = imputer.transform(x[:,1:3])
display(x)

"""Encoding Categorical Data"""

# Encoding independent features
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
ct = ColumnTransformer(transformers =[('encoder',OneHotEncoder(),[0])],remainder = 'passthrough')
x = np.array(ct.fit_transform(x))
display(x)

"""Encoding The independent variable"""

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
y = le.fit_transform(y)
display(y)

"""Splitting the Dataset into Training Sets and Test Sets"""

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.2,random_state = 1)
display(x_train,x_test,y_train,y_test)

"""Feature Scaling"""

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
x_train[:, 3:] = sc.fit_transform(x_train[:, 3:])
x_test[:, 3:] = sc.transform(x_test[:, 3:])
display(x_train,x_test)